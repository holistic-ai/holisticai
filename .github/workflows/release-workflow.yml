name: Release
on:
  push:
    branches: [ main ]

jobs:
  release-pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Create New Tag
        id: tag
        run: |
          new_version=$(eval echo $(head -2 pyproject.toml | grep version | cut -d'"' -f 2))
          git tag $new_version
          git push origin $new_version
          echo ::set-output name=new_version::$new_version
      - name: Print New Version
        run: |
          echo "New version: ${{ steps.tag.outputs.new_version }}"
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Configure Poetry
        env:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $pypi_token
      - name: Deploy to PyPI
        run: |
          poetry publish --build --skip-existing
