{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "# **Measuring Bias in recommender systems**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "This is an introduction to fairness in recommender systems. A recommender system aims to recommend the best item according to the user preference. In this tutorial, we will focus on the task of correctly predicting users' music preference.\n",
    "\n",
    "A recommender system can be biased in multiple ways. For example, we may be concerned that the artists in our database will not get equal representation (item fairness). Alternative, our main concern may be that different groups of users (e.g. male/female users) will get different music recommendations (user fairness). In the following, we will show how to explore the data for fairness, and measure these various types of fairness using the holisticai library."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## Importing the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "We will start by importing the example dataset, which we host on our library. The [datatset](https://www.kaggle.com/datasets/ravichaubey1506/lastfm) contains a set of artists that were downloaded by users. It includes personal information about the user, specifically sex and country of origin. A user can download more than one artist. We will use the column \"score\", which contains only 1s for counting the interactions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user</th>\n",
       "      <th>artist</th>\n",
       "      <th>sex</th>\n",
       "      <th>country</th>\n",
       "      <th>score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>red hot chili peppers</td>\n",
       "      <td>f</td>\n",
       "      <td>Germany</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>the black dahlia murder</td>\n",
       "      <td>f</td>\n",
       "      <td>Germany</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>goldfrapp</td>\n",
       "      <td>f</td>\n",
       "      <td>Germany</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>dropkick murphys</td>\n",
       "      <td>f</td>\n",
       "      <td>Germany</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>le tigre</td>\n",
       "      <td>f</td>\n",
       "      <td>Germany</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>289950</th>\n",
       "      <td>19718.0</td>\n",
       "      <td>bob dylan</td>\n",
       "      <td>f</td>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>289951</th>\n",
       "      <td>19718.0</td>\n",
       "      <td>pixies</td>\n",
       "      <td>f</td>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>289952</th>\n",
       "      <td>19718.0</td>\n",
       "      <td>the clash</td>\n",
       "      <td>f</td>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>289953</th>\n",
       "      <td>19718.0</td>\n",
       "      <td>a tribe called quest</td>\n",
       "      <td>f</td>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>289954</th>\n",
       "      <td>19718.0</td>\n",
       "      <td>radiohead</td>\n",
       "      <td>f</td>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>289955 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           user                   artist sex  country  score\n",
       "0           1.0    red hot chili peppers   f  Germany      1\n",
       "1           1.0  the black dahlia murder   f  Germany      1\n",
       "2           1.0                goldfrapp   f  Germany      1\n",
       "3           1.0         dropkick murphys   f  Germany      1\n",
       "4           1.0                 le tigre   f  Germany      1\n",
       "...         ...                      ...  ..      ...    ...\n",
       "289950  19718.0                bob dylan   f   Canada      1\n",
       "289951  19718.0                   pixies   f   Canada      1\n",
       "289952  19718.0                the clash   f   Canada      1\n",
       "289953  19718.0     a tribe called quest   f   Canada      1\n",
       "289954  19718.0                radiohead   f   Canada      1\n",
       "\n",
       "[289955 rows x 5 columns]"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import sys\n",
    "sys.path.append('../')\n",
    "from holisticai.datasets import load_last_fm\n",
    "\n",
    "bunch = load_last_fm()\n",
    "lastfm = bunch['frame']\n",
    "lastfm['score'] = 1\n",
    "lastfm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "We now need to change the dataframe to an interaction matrix, where every row is a user and every column is an artist. We can use the formatting function provided in the library, the output dataframe can be used as an input to the bias metric functions for recommenders."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import formatters\n",
    "from holisticai.utils import recommender_formatter\n",
    "\n",
    "# Each interaction results in a non-nan entry in the dataframe.\n",
    "df_pivot, p_attr = recommender_formatter(lastfm, users_col='user', groups_col='sex', items_col='artist', scores_col='score', aggfunc='mean')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>artist</th>\n",
       "      <th>...and you will know us by the trail of dead</th>\n",
       "      <th>2pac</th>\n",
       "      <th>3 doors down</th>\n",
       "      <th>30 seconds to mars</th>\n",
       "      <th>311</th>\n",
       "      <th>36 crazyfists</th>\n",
       "      <th>44</th>\n",
       "      <th>50 cent</th>\n",
       "      <th>65daysofstatic</th>\n",
       "      <th>Edith piaf</th>\n",
       "      <th>...</th>\n",
       "      <th>weezer</th>\n",
       "      <th>wilco</th>\n",
       "      <th>within temptation</th>\n",
       "      <th>wolfgang amadeus mozart</th>\n",
       "      <th>wu-tang clan</th>\n",
       "      <th>yann tiersen</th>\n",
       "      <th>yeah yeah yeahs</th>\n",
       "      <th>yellowcard</th>\n",
       "      <th>yo la tengo</th>\n",
       "      <th>zero 7</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>user</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19713.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19714.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19715.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19717.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19718.0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15000 rows Ã— 1004 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "artist   ...and you will know us by the trail of dead  2pac  3 doors down  \\\n",
       "user                                                                        \n",
       "1.0                                               NaN   NaN           NaN   \n",
       "3.0                                               NaN   NaN           NaN   \n",
       "4.0                                               NaN   NaN           NaN   \n",
       "5.0                                               NaN   NaN           NaN   \n",
       "6.0                                               NaN   NaN           NaN   \n",
       "...                                               ...   ...           ...   \n",
       "19713.0                                           NaN   NaN           NaN   \n",
       "19714.0                                           NaN   NaN           NaN   \n",
       "19715.0                                           NaN   NaN           NaN   \n",
       "19717.0                                           NaN   NaN           NaN   \n",
       "19718.0                                           NaN   NaN           NaN   \n",
       "\n",
       "artist   30 seconds to mars  311  36 crazyfists  44  50 cent  65daysofstatic  \\\n",
       "user                                                                           \n",
       "1.0                     NaN  NaN            NaN NaN      NaN             NaN   \n",
       "3.0                     NaN  NaN            NaN NaN      NaN             NaN   \n",
       "4.0                     NaN  NaN            NaN NaN      NaN             NaN   \n",
       "5.0                     NaN  NaN            NaN NaN      NaN             NaN   \n",
       "6.0                     NaN  NaN            NaN NaN      NaN             NaN   \n",
       "...                     ...  ...            ...  ..      ...             ...   \n",
       "19713.0                 NaN  NaN            NaN NaN      NaN             NaN   \n",
       "19714.0                 NaN  NaN            NaN NaN      NaN             NaN   \n",
       "19715.0                 NaN  NaN            NaN NaN      NaN             NaN   \n",
       "19717.0                 NaN  NaN            NaN NaN      NaN             NaN   \n",
       "19718.0                 NaN  NaN            NaN NaN      NaN             NaN   \n",
       "\n",
       "artist   Edith piaf  ...  weezer  wilco  within temptation  \\\n",
       "user                 ...                                     \n",
       "1.0             NaN  ...     NaN    NaN                NaN   \n",
       "3.0             NaN  ...     NaN    NaN                NaN   \n",
       "4.0             NaN  ...     NaN    NaN                NaN   \n",
       "5.0             NaN  ...     NaN    NaN                NaN   \n",
       "6.0             NaN  ...     NaN    NaN                NaN   \n",
       "...             ...  ...     ...    ...                ...   \n",
       "19713.0         NaN  ...     NaN    NaN                NaN   \n",
       "19714.0         NaN  ...     NaN    NaN                NaN   \n",
       "19715.0         NaN  ...     NaN    NaN                NaN   \n",
       "19717.0         NaN  ...     NaN    NaN                NaN   \n",
       "19718.0         NaN  ...     NaN    NaN                NaN   \n",
       "\n",
       "artist   wolfgang amadeus mozart  wu-tang clan  yann tiersen  yeah yeah yeahs  \\\n",
       "user                                                                            \n",
       "1.0                          NaN           NaN           NaN              NaN   \n",
       "3.0                          NaN           NaN           NaN              NaN   \n",
       "4.0                          NaN           NaN           NaN              NaN   \n",
       "5.0                          NaN           NaN           NaN              NaN   \n",
       "6.0                          NaN           NaN           NaN              NaN   \n",
       "...                          ...           ...           ...              ...   \n",
       "19713.0                      NaN           NaN           NaN              NaN   \n",
       "19714.0                      NaN           NaN           NaN              NaN   \n",
       "19715.0                      1.0           NaN           NaN              NaN   \n",
       "19717.0                      NaN           NaN           NaN              NaN   \n",
       "19718.0                      NaN           NaN           NaN              1.0   \n",
       "\n",
       "artist   yellowcard  yo la tengo  zero 7  \n",
       "user                                      \n",
       "1.0             NaN          NaN     NaN  \n",
       "3.0             NaN          NaN     NaN  \n",
       "4.0             NaN          NaN     NaN  \n",
       "5.0             NaN          NaN     NaN  \n",
       "6.0             NaN          NaN     NaN  \n",
       "...             ...          ...     ...  \n",
       "19713.0         NaN          NaN     NaN  \n",
       "19714.0         NaN          NaN     NaN  \n",
       "19715.0         NaN          NaN     NaN  \n",
       "19717.0         NaN          NaN     NaN  \n",
       "19718.0         NaN          NaN     NaN  \n",
       "\n",
       "[15000 rows x 1004 columns]"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_pivot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## Plotting and Data Exploration"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "We will now move to data exploration, using some of the functions for plotting available in our library."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "# import plotters\n",
    "from holisticai.bias.plots import group_pie_plot\n",
    "from holisticai.bias.plots import long_tail_plot\n",
    "from holisticai.bias.plots import exposure_diff_plot\n",
    "from holisticai.bias.plots import exposure_ratio_plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of Unique Users : 15000\n",
      "Number of Unique Artists : 1004\n"
     ]
    }
   ],
   "source": [
    "print ('Number of Unique Users : ' + str(df_pivot.shape[0]))\n",
    "print ('Number of Unique Artists : ' + str(df_pivot.shape[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# male vs female representation in data\n",
    "group_pie_plot(lastfm['sex'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# country representation in data\n",
    "group_pie_plot(lastfm['country'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "After an initial exploration of the users demographic, we can explore fairness-related plots. The `long_tail_plot` shows the descendent frequency of the items. In this example, the artists' popularity seems falls [exponentially](https://en.wikipedia.org/wiki/Zipf%27s_law) at a pretty fast rate. This can indicate an issue in terms of items fairness (i.e. if we want all artists to be recommended equally)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Items (sorted by popularity)', ylabel='Item Count'>"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# the long tail plot shows the distribution of item counts\n",
    "long_tail_plot(df_pivot.to_numpy())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we are interested in users' fairness instead, we may want to compare how often the same artists are presented to different groups of users. Here, we will focus on the comparison between male and female users. Specifically, we calculate the proportion of male users (out of all male users) who have downloaded each artist. We then compare this value to the corresponding proportion of female users.\n",
    "\n",
    "The holisticai function `exposure_diff_plot` displays the difference in exposure for each item, while `exposure_ratio_plot` measures the ratio in exposure."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Items (sorted by exposure difference)', ylabel='$Exposure_a - Exposure_b$'>"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZwAAAEmCAYAAABWECYqAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAAsTAAALEwEAmpwYAABS6ElEQVR4nO3dd3hUZfbA8e/UtEmFSQEpASEoBClBihCEdSEQirLoUgT8CagouqACoS9KNwsqAuuuuossoogIG4WIorAiCARRREqkRSAhPaRn2v39MWQ0BHQSM6nn8zx5yG1zz5mEObnvfe/7qhRFURBCCCFcTF3TAQghhGgYpOAIIYSoFlJwhBBCVAspOEIIIaqFFBwhhBDVQgqOEEKIaiEFR1SL/v37ExYWdtOv1atX13R4Lnf58uUyObdr146uXbsyYcIEEhISyuzbv39//vOf/wBQWFjI448/Tnh4OGPGjCE9PZ1Ro0YRHh7O888/XxOpVKmYmJgy78sdd9xB9+7dee6550hKSgLg0KFDhIWFUVBQ4NRrXr58mc8++8yVYYtK0tZ0AKLhePbZZxkxYkS59Z6enjUQTc3YuHEjoaGh2Gw2srOzef/993nkkUfYsGEDXbt2BWDr1q14eHgA8Nlnn3HgwAE2b95MYGAgW7du5fLly2zfvh0/P78azKTq9OvXjxdffBEARVHIysrihRde4LHHHmPXrl0Vfr3Zs2fToUMH7rvvvqoOVfxOUnBEtfHy8sJoNNZ0GDXKz8/P8R4EBQUxf/58MjIyWLJkCdu2bQMgICDAsX9eXh6NGzemQ4cOAOTm5tKyZUtat25d/cG7iF6vL/N7ERgYyIwZMxg1ahRnzpypwchEVZMmNVErmEwmoqOjmTJlimPdW2+9Rbdu3bh69SqHDh0iIiKCbdu20bt3byIiIpg/fz7FxcWO/S9evMiUKVPo1q0b3bt3Z968eeTn5zu2r127lr59+xIeHs7999/Pvn37gJ+buxITEx37btu2je7du5fZvm7dOrp3787kyZMB+O677xzNWwMGDOCf//wnNputwrmPHTuWH374gUuXLgE/N6mtWbOGF154geTkZMLCwujfvz9vvfUWR44cISwsjEOHDgHw5ptv0q9fPzp37szo0aP59ttvHa89btw4/vrXvzJo0CB69uzJuXPnyM/PZ/78+dx99910796dZ555htTUVMcx/fv3Z8OGDYwbN4677rqLoUOH8vnnnzu25+TkEBMTw913383dd9/NjBkzyMvLA8BsNhMbG8s999xD165dmThxIufPn6/we6LRaAB7MbpRXl4eL774In369OGuu+4qc46YmBgOHz7MW2+9Rf/+/St8XuFaUnBEraDX61m6dCl79+7ls88+4/z587z88svMmzeP4OBgwH4/48033+TVV19l/fr1HDhwgEWLFgH2D8ExY8ag0+nYtGkTa9as4ejRo8yZMweATz/9lLfffpuXXnqJXbt20bdvX6ZNm1amIP2WvXv38u677zJz5kwyMzOZOHEiffr0IS4ujrlz5/LOO+/wxhtvVDj322+/HYAff/yxzPpHH32UZ599luDgYPbv38+OHTsYPXo0nTt3Zv/+/XTu3Jl3332Xt99+m4ULF/Lhhx/St29fJkyY4CheYG+imzNnDq+//jqtW7dmwYIFXLhwgTfeeIONGzeiUqmYNGkSFovFccyrr77KqFGj+OCDD2jZsiWzZ8/GZDIBMHXqVBITE3n99dfZsGEDZ8+edfwcXn31Vfbt28fq1avZsmULoaGhjBs3zlGQnHHlyhVWr15N69atadmyZbntzzzzDIcOHWLVqlVs2bIFNzc3Jk6cSFFREXPnznUU3q1btzp9TlFNFCGqQb9+/ZT27dsrnTp1Kvd15coVx37Lli1T+vXrp/z5z39Wpk6d6lj/9ddfK23btlWOHDniWPfpp58q7du3V/Ly8pSNGzcq3bt3V4qKihzbv/32W6Vt27bK+fPnlX/961/KPffco1y6dElRFEUpKSlRvvzyS6WoqEi5dOmS0rZtW+XMmTOOYz/44APl7rvvVhRFcWz/6KOPHNtfeeUV5ZFHHimT43//+1/HMTe62TlKmc1mpW3btsqOHTsc79XGjRsVRVGUjRs3Kv369XPsu3z5cuXhhx92LN97772O40r93//9n7J8+XJFURTl4YcfVh599FHHtp9++klp27atcvXqVce6kpISpVOnTsrnn3/uOP/8+fMd20+dOuV4HxMTE5W2bdsqp06dcmw/fvy4snbtWqWoqEjp0KGDkpCQUCaeAQMGOPK50axZs5Q77rjD8bvQoUMHJSwsTPnTn/6knD59WlGUn3/2+fn5ypkzZ5S2bdsqx48fd7xGQUGBcvfddyvvvfeeI+fS/EXtIvdw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2bOVTZs21WD0lXfgwAGle/fuyqxZs5SioqJ6ne9PP/2k9O7dW0lJSVFMJpMyevRoZe/evfU658LCQqVbt25KZmamYjablZEjRyp79uypdzl/++23ypAhQ5T27dsrly5dqtTv8mOPPaZ89NFHiqIoymuvvaasXLmywnHIFU4VOnDgAD169MDPzw9PT08GDhxIfHx8TYdVJYxGIzExMej1enQ6Ha1bt+bixYu0aNGCZs2aodVqGTp0KPHx8Vy5coXi4mI6deoEwIgRI+rk+5CTk8Pq1at54oknADh+/Hi9zvfTTz9l8ODBBAcHo9PpWL16NR4eHvU6Z6vVis1mo6ioCIvFgsViwWAw1Luct2zZwsKFCwkMDAQq/rtsNps5cuQIAwcOLLO+omS06CqUlpaG0Wh0LAcGBnL8+PEajKjqtGnTxvH9xYsX2bVrFw8//HC5fFNTU8u9D0ajkdTU1GqNtyosWLCA6dOnk5KSAtz851uf8k1KSkKn0/HEE0+QkpLCvffeS5s2bep1zgaDgb/85S8MGjQIDw8PunXrVi9/zkuWLCmzXNEcs7OzMRgMaLXaMusrSq5wqpDNZkOl+nlobkVRyizXBz/++COPPvooM2fOpFmzZjfNtz68D++//z4hISH07NnTse5WedWHfMH+1/7BgwdZunQp7733HsePH+fSpUv1OufTp0/zwQcf8MUXX/Dll1+iVqu5ePFivc4ZKv67fLNcK5O7XOFUoeDgYBISEhzL6enpjkvY+uDo0aM888wzzJkzh+joaA4fPkx6erpje2m+wcHBZdZnZGTUufdh586dpKenM3z4cK5du0ZhYSFXrlxBo9E49qlP+QI0btyYnj17EhAQAMB9991HfHx8vc55//799OzZk0aNGgH2pqI333yzXucMlMvlt3IMCAggLy8Pq9WKRqOp9GebXOFUoV69enHw4EGysrIoKipi9+7dREZG1nRYVSIlJYWnnnqK2NhYoqOjAbjrrru4cOECSUlJWK1WPvroIyIjI2natClubm4cPXoUsPcCqmvvw7/+9S8++ugjduzYwTPPPEP//v1544036m2+AP369WP//v3k5uZitVr58ssviYqKqtc5t2vXjgMHDlBYWIiiKHz++ef1+ve6VEVz1Ol0REREsHPnTgC2b99eqdzlCqcKBQUFMX36dMaPH4/ZbGbkyJF07NixpsOqEm+++SYlJSUsX77csW7UqFEsX76cp59+mpKSEvr27UtUVBQAsbGxzJs3j/z8fNq3b8/48eNrKvQq4+bmVq/zveuuu5g0aRJjxozBbDZzzz33MHr0aFq1alVvc+7duzcnT55kxIgR6HQ6wsPDefrpp7nnnnvqbc5Qud/lhQsXEhMTw/r16wkJCWHVqlUVPq/M+CmEEKJaSJOaEEKIaiEFRwghRLWQgiOEEKJaSMERQghRLaTgCCGEqBZScESF9O/fn++//x6wjx792WefVXsMVquVxx9/nIyMjCp5vffff79SI3sPGTKEQ4cOlVs/bty4OjPGVk3p3Lkzly9f5vvvv+eZZ54B7M96DRkyhOHDh3P48GFGjRpFdHQ0u3fvruFoy8vPz2fSpEkUFxfXdCh1ihQcUWmHDh2qkeHZ33rrLe6++24aN25cJa939OhR+eCoIeHh4bz66quA/fepcePG7NixA5VKRWZmJh9//DEDBgyo4SjLMxgMDBkyhFdeeaWmQ6lT5MFPUSmbNm3ixIkTrFy5Eo1GQ9++fYmNjeXIkSNYrVbuvPNO5s2bh8FgoH///gwZMoSvv/6aa9euMWnSJL755ht++OEHtFot69evJygoiHfeeYd3330XnU6Hm5sbL7zwArfffnuZ8xYVFbFhwwbi4uIAOHfuHHPnzsVkMqEoCiNHjmTs2LGYzWaWL1/OwYMH0Wg0dOzYkdmzZzvi6dixI2fOnOHZZ5/l888/56uvvsLd3Z2xY8eyfv16du/ejc1mo2nTpixcuJCgoCDOnj3LnDlzKCoqolWrVhQWFt7y/fn000/5xz/+QXFxMUOHDmXKlCmsX7+es2fP8re//Q2AhIQEFi9ezPbt28scm5eXx5IlS0hMTMRsNtOzZ09mzpxJUlISo0aN4u233+aOO+5g5syZaLVali5dyp133snkyZP58ssvKSws5Nlnn3V8UK9du5aPP/4YjUZDaGgo8+fPx2g0snv3btavX49KpUKj0TBz5ky6devGuHHjHPOeAGWWO3TowB/+8AdOnz5NbGwsnp6eLFmyhJycHKxWK+PGjWPkyJHl3o+EhARefPFFVCoV4eHh2Gw2wF5kXnzxRebNm8fLL79MXl4e48aN4+rVq6SmpjJ8+HDee+89Tp48SWxsLEVFRajVaqZOnUq/fv3Ytm0bW7dupaioCIPBwMaNG3n//ffZvHkzNpsNPz8/5s+fT+vWrYmJicFgMHDmzBmuXr1KWFgYK1aswMvLi++++47FixdTVFSETqdj5syZ9OzZk3Pnzt0yv0GDBhEbG8vEiROr7I+feq9ysyuIhqpfv37K8ePHFUVRlIcffljZtWuXoiiKsmbNGmX58uWKzWZTFEVR/va3vykLFy50HLN06VJFURTl448/Vtq1a6ecOnVKURRFefLJJ5X169crFotFad++vZKamqooiqJ8+OGHyrvvvlvu/J9//rny8MMPO5Znz56tvP7664qiKEpaWpoybdo0xWq1Kq+88ooydepUxWQyKVarVYmJiVHmz5/viOe1115zvMasWbOUN954w3HeadOmKWazWVEURXn33XeVSZMmKYqiKMOHD1e2bNmiKIqiJCQkKGFhYcrXX39dLsaHH35YefzxxxWz2azk5eUpUVFRyt69e5WMjAylS5cuSnZ2tqIoijJjxgxl8+bN5Y6PiYlR3n77bUVRFMVisSjPP/+88o9//ENRFEV57733lKFDhypbtmxRhg4dqhQVFSmKoiht27ZV1q9fryiKopw6dUrp2rWrkpmZqWzdulX585//rBQUFCiKoiivvvqq8uijjyqKoih/+MMfHPOefPnll8qaNWvK/VxvXG7btq3y4YcfKoqiKGazWRk8eLBy4sQJRVEUJTc3Vxk0aJDjNUuVlJQovXr1Ug4cOKAoiqLExcUpbdu2VS5duqR8/fXXSnR0tKIoivLBBx8ojz32mKIoSpn1OTk5yoABA5RLly4pimKfdyoyMlK5cuWK8sEHHyjdunVT8vLyFEVRlEOHDiljxoxRCgsLHXlFRUU5fs6/nNPp/vvvV7Zu3aqYTCblnnvuUb744gtFURTl+++/V4YMGaKUlJT8Zn6PP/64snXr1nI/Q3FzcoUjqsTevXvJy8vjwIEDAJjNZseAiIDjr+1mzZrRuHFj2rVrB0Dz5s25du0aGo2GqKgoRo0axb333kvv3r3p27dvufOcP3+e5s2bO5b/+Mc/MmvWLI4fP07Pnj2ZN28earWa//3vf0yfPh2dTgfY/0p/6qmnHMdFRETcNI8vvviC77//nj/96U8AjrlSsrOzOXPmDPfffz8AXbt2LTNlw41GjhyJVqvFYDAwcOBADhw4QN++fbn33nvZsWMH999/P/v372fhwoU3fS+///57tm7dClCmue+hhx5i//79LF68mB07duDu7u7Y9vDDDwP28cHatm3LkSNH+N///seIESPw9PQEYPz48fz973/HZDIRHR3N1KlT6du3L/fccw+TJ0++ZT6/VPreXbx4kZ9++ok5c+Y4thUXF3Py5EnHfCoAiYmJaLVax8jbQ4YMYcGCBU6dC+Dbb78lPT29zM9PpVJx5swZAMLCwjAYDID9vSu9EiyVm5tLTk4OAH369EGv1wPQtm1brl27RmJiImq1mnvvvReADh06EBcXx9mzZ38zv9tuu40LFy44nUtDJwVHVAmbzcacOXMcRaKgoICSkhLH9tL/5ICjCNwoNjaWxMREDhw4wD/+8Q927NhRro28dAj1Uv369eOTTz7hwIEDHDx4kLVr17Jt27Zyw6zbbDbMZrNjufQD+GZ5lI4nBmAymbh27Zpju/KLkaBK5wa5mV+ONqwoimPfsWPH8te//hWtVsuAAQPw8vK6aQyvvPIKrVu3BuwfmKW5mEwmkpKS8Pb25tSpU7Rs2fKm57TZbGg0mpu+D6X33aZPn86f/vQnvvrqK7Zt28Zbb73lKHK/zPOX7xv8/N5ZrVa8vb3ZsWOHY1tGRgbe3t7lclJuGEHr1967G1mtVlq3bs3777/vWJeamkpAQABxcXFlfpY2m43hw4czY8YMx3JaWhq+vr4AZQp06bD7Go2m3FD7iYmJKIrym/npdLoy77v4ddJpQFSaRqNxfHj17t2bTZs2YTKZsNlszJ8/v0KD+2VlZdG3b1/8/Px45JFHmDZtmqM33C+FhoZy6dIlx/Jzzz3Hzp07iY6OZuHChRgMBn766Sf69OnD5s2bMZvN2Gw2Nm3axD333ONUHlu3biU/Px+AV155hZkzZ+Lv70/79u0dH3o//PADiYmJt8xn+/btKIrCtWvX2LVrF3369AGgS5cuqNVq3nzzzTJ/hf9S7969+fe//42iKJhMJqZMmcJ//vMfAFauXEmbNm148803Wbx4MVeuXClzztLYLly4QLdu3ejTpw8ffPCB437Txo0b6datG2q1mv79+1NUVMTo0aNZuHAhZ86cwWQyERAQwIkTJwA4e/as40riZj8Ld3d3xwdyaS+z0mNLhYWFoSgK+/btA2DPnj1livhv6dSpE0lJSRw5cgSAU6dOMXDgwJtOANa7d28+/vhj0tLSANi8eTMTJkz41ddv1aoVKpWKr776CrC/fxMmTHAqv8uXLxMaGup0Lg2dXOGISuvfvz+rVq3CbDbz5JNPsmLFCh544AGsVit33HEHMTExTr9WQEAAU6ZM4ZFHHsHd3R2NRsPixYvL7derVy/mzp1Lbm4uPj4+PPnkk8ydO5f33nsPjUbDfffdR7du3ejYsSMrVqzg/vvvx2Kx0LFjR+bPn3/Tc0dGRjpGwZ48eTKpqak89NBDqFQqQkJCHNtWrVrF7Nmzeffdd2nevDmtWrW6ZT7e3t6MGDGC4uJiHn74YXr06OHYNmLECHbu3OloVrzR3LlzWbJkCUOHDsVsNtOrVy8mTZrE3r17+fTTT4mLi8PHx4cJEybw3HPPOYrRN998w5YtW7DZbKxevRpfX19GjhxJSkoKDz74IDabjRYtWhAbG4tWq2XOnDk8//zzaLVaVCoVS5cuRa/XM2XKFGJiYti3bx+tWrW6ZfOjXq9n3bp1LFmyhDfeeAOLxcJf/vIXunbtWmY/nU7H2rVr+etf/8qqVau44447yjS3/paAgABeffVVVq5cSUlJCYqisHLlSm677TYOHz5cZt/evXszefJkHn30UVQqFQaDgddee+1XJwvT6/WsWbOGpUuXsnLlSnQ6HWvWrPnN/EwmE99++2252TTFrclo0aLO+fvf/45Go3H6nkNtYrFYmDp1KsOGDWPw4MFV9rphYWEcPHjQMXmacL1t27bx448/MmvWrJoOpc6QJjVR5zz66KN8/fXXZWYmrAvOnj1Lz5498ff3d3Q5FnVTQUEBH330EU8//XRNh1KnyBWOEEKIaiFXOEIIIaqFFBwhhBDVQgqOEEKIaiEFRwghRLWQgiOEEKJaSMERQghRLf4fss5Le+AVejYAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# sorted exposure differences\n",
    "group_a = p_attr=='f'\n",
    "group_b = p_attr=='m'\n",
    "exposure_diff_plot(group_a, group_b, df_pivot.to_numpy())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The differences in exposures seem to be overall quite small. However, since the number of items is quite large, the exposures are small to start with. In these cases, the exposure ratio may be a more informative choice."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Items (sorted by exposure ratio)', ylabel='$Exposure_a/Exposure_b$'>"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# sorted exposure ratios\n",
    "exposure_ratio_plot(group_a, group_b, df_pivot.to_numpy())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Items (sorted by exposure ratio)', ylabel='$Exposure_a/Exposure_b$'>"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "exposure_ratio_plot(group_b, group_a, df_pivot.to_numpy())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above plots show that there are artists that are more than 5 times more popular amongst the female subgroup than male, and artists that are more than 20 times more popular amongst male rather than female users."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Train a Model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are many ways to recommend artists to users. We will use item based collaborative filtering since it is the simplest and most intuitive approach. For each artist, we work out a list of most similar artists. Then we recommend artists to users by looking at which artists they like, and choosing the most similar ones."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [],
   "source": [
    "index_to_artist = dict(zip(range(len(df_pivot.columns)),df_pivot.columns))\n",
    "artist_to_index = dict(zip(df_pivot.columns,range(len(df_pivot.columns))))\n",
    "user_gender_dict = dict(zip(df_pivot.index, p_attr))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       ...,\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.]])"
      ]
     },
     "execution_count": 178,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_matrix = df_pivot.fillna(0).to_numpy()\n",
    "data_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1004, 1004)"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import linear_kernel\n",
    "from sklearn.metrics.pairwise import linear_kernel\n",
    "\n",
    "# Compute the cosine similarity between items matrix\n",
    "cosine_sim = linear_kernel(data_matrix.T, data_matrix.T)\n",
    "\n",
    "cosine_sim.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['mogwai',\n",
       " 'my bloody valentine',\n",
       " 'sonic youth',\n",
       " 'stereolab',\n",
       " 'the fall',\n",
       " 'the kinks',\n",
       " 'the radio dept.',\n",
       " 'the velvet underground']"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Helper functions for display\n",
    "def display_items(arr):\n",
    "    return [index_to_artist[x] for x in arr]\n",
    "\n",
    "# Items liked by a given user\n",
    "def items_liked_by_user(data_matrix, u):\n",
    "    return np.nonzero(data_matrix[u])[0]\n",
    "\n",
    "display_items(items_liked_by_user(data_matrix, 9))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So user 9 happens to be a fan of Mogwai, nice."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['boards of canada',\n",
       " 'muse',\n",
       " 'pink floyd',\n",
       " 'the beatles',\n",
       " 'portishead',\n",
       " 'coldplay',\n",
       " 'death cab for cutie',\n",
       " 'explosions in the sky',\n",
       " 'sigur ros',\n",
       " 'radiohead']"
      ]
     },
     "execution_count": 204,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def items_similar_to_item(similarity_matrix, i, k):\n",
    "    arr = similarity_matrix[i]\n",
    "    arr[i] = 0\n",
    "    return np.argsort(arr)[-k:]\n",
    "\n",
    "# Items similar to Mogwai\n",
    "display_items(items_similar_to_item(cosine_sim, artist_to_index['mogwai'], 10))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ok so we want to train a model, we will take a simple approach. For each user we look at their liked items, then we create a list of similar items and choose the most frequent ones."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ac/dc',\n",
       " 'green day',\n",
       " 'foo fighters',\n",
       " 'rammstein',\n",
       " 'the killers',\n",
       " 'led zeppelin',\n",
       " 'muse',\n",
       " 'radiohead',\n",
       " 'red hot chili peppers',\n",
       " 'coldplay']"
      ]
     },
     "execution_count": 185,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def recommended_items(data_matrix, similarity_matrix, u, k):\n",
    "    liked = items_liked_by_user(data_matrix, u)\n",
    "    arr = np.sum(similarity_matrix[liked,:], axis=0)\n",
    "    arr[liked] = 0\n",
    "    return np.argsort(arr)[-k:]\n",
    "    \n",
    "\n",
    "display_items(recommended_items(data_matrix, cosine_sim, 590, 10))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Quantitative evaluation is possible, but we choose to evaluate our model qualitatively. Let's look at some examples to see if it makes sense."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['t.i.',\n",
       " 'the game',\n",
       " 'dr. dre',\n",
       " 'notorious b.i.g.',\n",
       " '50 cent',\n",
       " 'jay-z',\n",
       " 'snoop dogg',\n",
       " 'nas',\n",
       " 'eminem',\n",
       " 'kanye west']"
      ]
     },
     "execution_count": 205,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Items similar to 2 Pac\n",
    "display_items(items_similar_to_item(cosine_sim, artist_to_index['2pac'], 10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['nirvana',\n",
       " 'queen',\n",
       " 'the rolling stones',\n",
       " 'david bowie',\n",
       " 'led zeppelin',\n",
       " 'red hot chili peppers',\n",
       " 'bob dylan',\n",
       " 'pink floyd',\n",
       " 'coldplay',\n",
       " 'radiohead']"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Items similar to 2 Pac\n",
    "display_items(items_similar_to_item(cosine_sim, artist_to_index['the beatles'], 10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['u2',\n",
       " 'nelly furtado',\n",
       " 'amy winehouse',\n",
       " 'depeche mode',\n",
       " 'michael jackson',\n",
       " 'kylie minogue',\n",
       " 'the beatles',\n",
       " 'rihanna',\n",
       " 'britney spears',\n",
       " 'coldplay']"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Items similar to 2 Pac\n",
    "display_items(items_similar_to_item(cosine_sim, artist_to_index['madonna'], 10))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These all make sense to a human evaluator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>system of a down</td>\n",
       "      <td>led zeppelin</td>\n",
       "      <td>foo fighters</td>\n",
       "      <td>pink floyd</td>\n",
       "      <td>nirvana</td>\n",
       "      <td>metallica</td>\n",
       "      <td>muse</td>\n",
       "      <td>radiohead</td>\n",
       "      <td>the beatles</td>\n",
       "      <td>coldplay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>modest mouse</td>\n",
       "      <td>sufjan stevens</td>\n",
       "      <td>death cab for cutie</td>\n",
       "      <td>muse</td>\n",
       "      <td>pink floyd</td>\n",
       "      <td>beck</td>\n",
       "      <td>bjork</td>\n",
       "      <td>sigur ros</td>\n",
       "      <td>coldplay</td>\n",
       "      <td>the beatles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>the white stripes</td>\n",
       "      <td>death cab for cutie</td>\n",
       "      <td>david bowie</td>\n",
       "      <td>daft punk</td>\n",
       "      <td>nirvana</td>\n",
       "      <td>the killers</td>\n",
       "      <td>red hot chili peppers</td>\n",
       "      <td>coldplay</td>\n",
       "      <td>the beatles</td>\n",
       "      <td>radiohead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>queen</td>\n",
       "      <td>linkin park</td>\n",
       "      <td>in flames</td>\n",
       "      <td>nirvana</td>\n",
       "      <td>led zeppelin</td>\n",
       "      <td>rammstein</td>\n",
       "      <td>the beatles</td>\n",
       "      <td>pink floyd</td>\n",
       "      <td>red hot chili peppers</td>\n",
       "      <td>system of a down</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>linkin park</td>\n",
       "      <td>foo fighters</td>\n",
       "      <td>system of a down</td>\n",
       "      <td>led zeppelin</td>\n",
       "      <td>the killers</td>\n",
       "      <td>nirvana</td>\n",
       "      <td>red hot chili peppers</td>\n",
       "      <td>the beatles</td>\n",
       "      <td>coldplay</td>\n",
       "      <td>radiohead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14995</th>\n",
       "      <td>evanescence</td>\n",
       "      <td>radiohead</td>\n",
       "      <td>metallica</td>\n",
       "      <td>daft punk</td>\n",
       "      <td>system of a down</td>\n",
       "      <td>the killers</td>\n",
       "      <td>moby</td>\n",
       "      <td>muse</td>\n",
       "      <td>red hot chili peppers</td>\n",
       "      <td>coldplay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14996</th>\n",
       "      <td>rammstein</td>\n",
       "      <td>in flames</td>\n",
       "      <td>muse</td>\n",
       "      <td>coldplay</td>\n",
       "      <td>pink floyd</td>\n",
       "      <td>radiohead</td>\n",
       "      <td>nirvana</td>\n",
       "      <td>system of a down</td>\n",
       "      <td>the beatles</td>\n",
       "      <td>metallica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14997</th>\n",
       "      <td>the rolling stones</td>\n",
       "      <td>nirvana</td>\n",
       "      <td>depeche mode</td>\n",
       "      <td>muse</td>\n",
       "      <td>pink floyd</td>\n",
       "      <td>the killers</td>\n",
       "      <td>red hot chili peppers</td>\n",
       "      <td>radiohead</td>\n",
       "      <td>coldplay</td>\n",
       "      <td>the beatles</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14998</th>\n",
       "      <td>nelly furtado</td>\n",
       "      <td>muse</td>\n",
       "      <td>the beatles</td>\n",
       "      <td>lady gaga</td>\n",
       "      <td>the killers</td>\n",
       "      <td>avril lavigne</td>\n",
       "      <td>linkin park</td>\n",
       "      <td>rihanna</td>\n",
       "      <td>britney spears</td>\n",
       "      <td>coldplay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14999</th>\n",
       "      <td>nirvana</td>\n",
       "      <td>led zeppelin</td>\n",
       "      <td>modest mouse</td>\n",
       "      <td>the rolling stones</td>\n",
       "      <td>the cure</td>\n",
       "      <td>beck</td>\n",
       "      <td>muse</td>\n",
       "      <td>pink floyd</td>\n",
       "      <td>death cab for cutie</td>\n",
       "      <td>coldplay</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15000 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                       1                    2                    3   \\\n",
       "0        system of a down         led zeppelin         foo fighters   \n",
       "1            modest mouse       sufjan stevens  death cab for cutie   \n",
       "2       the white stripes  death cab for cutie          david bowie   \n",
       "3                   queen          linkin park            in flames   \n",
       "4             linkin park         foo fighters     system of a down   \n",
       "...                   ...                  ...                  ...   \n",
       "14995         evanescence            radiohead            metallica   \n",
       "14996           rammstein            in flames                 muse   \n",
       "14997  the rolling stones              nirvana         depeche mode   \n",
       "14998       nelly furtado                 muse          the beatles   \n",
       "14999             nirvana         led zeppelin         modest mouse   \n",
       "\n",
       "                       4                 5              6   \\\n",
       "0              pink floyd           nirvana      metallica   \n",
       "1                    muse        pink floyd           beck   \n",
       "2               daft punk           nirvana    the killers   \n",
       "3                 nirvana      led zeppelin      rammstein   \n",
       "4            led zeppelin       the killers        nirvana   \n",
       "...                   ...               ...            ...   \n",
       "14995           daft punk  system of a down    the killers   \n",
       "14996            coldplay        pink floyd      radiohead   \n",
       "14997                muse        pink floyd    the killers   \n",
       "14998           lady gaga       the killers  avril lavigne   \n",
       "14999  the rolling stones          the cure           beck   \n",
       "\n",
       "                          7                 8                      9   \\\n",
       "0                       muse         radiohead            the beatles   \n",
       "1                      bjork         sigur ros               coldplay   \n",
       "2      red hot chili peppers          coldplay            the beatles   \n",
       "3                the beatles        pink floyd  red hot chili peppers   \n",
       "4      red hot chili peppers       the beatles               coldplay   \n",
       "...                      ...               ...                    ...   \n",
       "14995                   moby              muse  red hot chili peppers   \n",
       "14996                nirvana  system of a down            the beatles   \n",
       "14997  red hot chili peppers         radiohead               coldplay   \n",
       "14998            linkin park           rihanna         britney spears   \n",
       "14999                   muse        pink floyd    death cab for cutie   \n",
       "\n",
       "                     10  \n",
       "0              coldplay  \n",
       "1           the beatles  \n",
       "2             radiohead  \n",
       "3      system of a down  \n",
       "4             radiohead  \n",
       "...                 ...  \n",
       "14995          coldplay  \n",
       "14996         metallica  \n",
       "14997       the beatles  \n",
       "14998          coldplay  \n",
       "14999          coldplay  \n",
       "\n",
       "[15000 rows x 10 columns]"
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "recommendations = [display_items(recommended_items(data_matrix, cosine_sim, u, 10)) for u in range(df_pivot.shape[0])]\n",
    "\n",
    "recomendation_df = pd.DataFrame(recommendations, columns = range(1,11))\n",
    "\n",
    "recomendation_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>artist</th>\n",
       "      <th>...and you will know us by the trail of dead</th>\n",
       "      <th>2pac</th>\n",
       "      <th>3 doors down</th>\n",
       "      <th>30 seconds to mars</th>\n",
       "      <th>311</th>\n",
       "      <th>36 crazyfists</th>\n",
       "      <th>44</th>\n",
       "      <th>50 cent</th>\n",
       "      <th>65daysofstatic</th>\n",
       "      <th>Edith piaf</th>\n",
       "      <th>...</th>\n",
       "      <th>weezer</th>\n",
       "      <th>wilco</th>\n",
       "      <th>within temptation</th>\n",
       "      <th>wolfgang amadeus mozart</th>\n",
       "      <th>wu-tang clan</th>\n",
       "      <th>yann tiersen</th>\n",
       "      <th>yeah yeah yeahs</th>\n",
       "      <th>yellowcard</th>\n",
       "      <th>yo la tengo</th>\n",
       "      <th>zero 7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14995</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14996</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14997</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14998</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14999</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15000 rows Ã— 1004 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "artist  ...and you will know us by the trail of dead  2pac  3 doors down  \\\n",
       "0                                                0.0   0.0           0.0   \n",
       "1                                                0.0   0.0           0.0   \n",
       "2                                                0.0   0.0           0.0   \n",
       "3                                                0.0   0.0           0.0   \n",
       "4                                                0.0   0.0           0.0   \n",
       "...                                              ...   ...           ...   \n",
       "14995                                            0.0   0.0           0.0   \n",
       "14996                                            0.0   0.0           0.0   \n",
       "14997                                            0.0   0.0           0.0   \n",
       "14998                                            0.0   0.0           0.0   \n",
       "14999                                            0.0   0.0           0.0   \n",
       "\n",
       "artist  30 seconds to mars  311  36 crazyfists   44  50 cent  65daysofstatic  \\\n",
       "0                      0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "1                      0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "2                      0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "3                      0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "4                      0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "...                    ...  ...            ...  ...      ...             ...   \n",
       "14995                  0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "14996                  0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "14997                  0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "14998                  0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "14999                  0.0  0.0            0.0  0.0      0.0             0.0   \n",
       "\n",
       "artist  Edith piaf  ...  weezer  wilco  within temptation  \\\n",
       "0              0.0  ...     0.0    0.0                0.0   \n",
       "1              0.0  ...     0.0    0.0                0.0   \n",
       "2              0.0  ...     0.0    0.0                0.0   \n",
       "3              0.0  ...     0.0    0.0                0.0   \n",
       "4              0.0  ...     0.0    0.0                0.0   \n",
       "...            ...  ...     ...    ...                ...   \n",
       "14995          0.0  ...     0.0    0.0                0.0   \n",
       "14996          0.0  ...     0.0    0.0                0.0   \n",
       "14997          0.0  ...     0.0    0.0                0.0   \n",
       "14998          0.0  ...     0.0    0.0                0.0   \n",
       "14999          0.0  ...     0.0    0.0                0.0   \n",
       "\n",
       "artist  wolfgang amadeus mozart  wu-tang clan  yann tiersen  yeah yeah yeahs  \\\n",
       "0                           0.0           0.0           0.0              0.0   \n",
       "1                           0.0           0.0           0.0              0.0   \n",
       "2                           0.0           0.0           0.0              0.0   \n",
       "3                           0.0           0.0           0.0              0.0   \n",
       "4                           0.0           0.0           0.0              0.0   \n",
       "...                         ...           ...           ...              ...   \n",
       "14995                       0.0           0.0           0.0              0.0   \n",
       "14996                       0.0           0.0           0.0              0.0   \n",
       "14997                       0.0           0.0           0.0              0.0   \n",
       "14998                       0.0           0.0           0.0              0.0   \n",
       "14999                       0.0           0.0           0.0              0.0   \n",
       "\n",
       "artist  yellowcard  yo la tengo  zero 7  \n",
       "0              0.0          0.0     0.0  \n",
       "1              0.0          0.0     0.0  \n",
       "2              0.0          0.0     0.0  \n",
       "3              0.0          0.0     0.0  \n",
       "4              0.0          0.0     0.0  \n",
       "...            ...          ...     ...  \n",
       "14995          0.0          0.0     0.0  \n",
       "14996          0.0          0.0     0.0  \n",
       "14997          0.0          0.0     0.0  \n",
       "14998          0.0          0.0     0.0  \n",
       "14999          0.0          0.0     0.0  \n",
       "\n",
       "[15000 rows x 1004 columns]"
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def explode(arr, num_items):\n",
    "    out = np.zeros(num_items)\n",
    "    out[arr] = 1\n",
    "    return out\n",
    "\n",
    "new_recs = [explode(recommended_items(data_matrix, cosine_sim, u, 10), len(df_pivot.columns)) for u in range(df_pivot.shape[0])]\n",
    "\n",
    "new_df_pivot = pd.DataFrame(new_recs, columns = df_pivot.columns)\n",
    "\n",
    "new_df_pivot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Evaluate Bias of Model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "We will now show how we can calculate various metrics of fairness for recommender systems. In this example, we will cover both metrics for item fairness and for user fairness (equality of outcome)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Item Fairness"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [],
   "source": [
    "mat = new_df_pivot.replace(0,np.nan).to_numpy()\n",
    "group_a = p_attr=='f'\n",
    "group_b = p_attr=='m'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Items (sorted by popularity)', ylabel='Item Count'>"
      ]
     },
     "execution_count": 203,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# the long tail plot shows the distribution of item counts\n",
    "long_tail_plot(mat)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The item bias has been increased very considerably by using collaborative filtering. This is easily seen by the shape of the above distribution."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.4113545816733068"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from holisticai.bias.metrics import aggregate_diversity\n",
    "aggregate_diversity(mat)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above metric shows 40% of all artists are shown to at least one user."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9644235161183117"
      ]
     },
     "execution_count": 199,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from holisticai.bias.metrics import gini_index\n",
    "gini_index(mat)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The Gini Index is often used in the context of recommender systems as a measure of how unequal the distribution of exposure is over artists. A value of 0 would indicate perfect fairness, a flat distribution. A value of 1 would be maximally unequal. In this case the GINI Index is 0.96, indicating a VERY considerable amount of difference in exposures overall between different artists."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/giuliofilippi/opt/anaconda3/envs/torch-nightly/lib/python3.9/site-packages/holisticai/utils/_recommender_tools.py:228: RuntimeWarning: divide by zero encountered in log\n",
      "  return -np.sum(np.where(p != 0, p * np.log(p), 0))\n",
      "/Users/giuliofilippi/opt/anaconda3/envs/torch-nightly/lib/python3.9/site-packages/holisticai/utils/_recommender_tools.py:228: RuntimeWarning: invalid value encountered in multiply\n",
      "  return -np.sum(np.where(p != 0, p * np.log(p), 0))\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Value</th>\n",
       "      <th>Reference</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Metric</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Aggregate Diversity</th>\n",
       "      <td>0.411355</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GINI index</th>\n",
       "      <td>0.964424</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Exposure Distribution Entropy</th>\n",
       "      <td>3.812282</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Average Recommendation Popularity</th>\n",
       "      <td>5716.980253</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Value Reference\n",
       "Metric                                                  \n",
       "Aggregate Diversity                   0.411355         1\n",
       "GINI index                            0.964424         0\n",
       "Exposure Distribution Entropy         3.812282         -\n",
       "Average Recommendation Popularity  5716.980253         -"
      ]
     },
     "execution_count": 200,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from holisticai.bias.metrics import recommender_bias_metrics\n",
    "recommender_bias_metrics(mat_pred=mat, metric_type='item_based')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Above we have batch plotted all item_based metrics for recommender bias task. For instance observe the Average Recommendation Popularity is 5716, meaning that on average a user will be recommended an artist that has 5716 total interactions."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## User fairness - Equality of Outcome"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.11064958985833381"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from holisticai.bias.metrics import exposure_l1\n",
    "exposure_l1(group_a, group_b, mat)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Above we compute the total variation distance between the exposure distribution of males and females. The minimum value for this metric is 0 indicating the two subgroups are exposed to the artists in exactly the same way, the maximum value is 1 indicating a maximal separation in exposures between the two groups. In this case the value of 0.11 shows there is a difference between the recommendations to males and females, but not a drastic one."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.12 ('torch-nightly')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "f5fa74478a026ac530ef194e4df855dfb9675779484e20284ae5f690a2266d7b"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
